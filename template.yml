AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  EvadataKmsKey:
    Type: String
    Description: KmsKeyArn provided by Evadata
    Default: arn:aws:kms:us-east-1:XXXXXXXXXXXX:key/XXXXXXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX # Update with the KMS Key Arn provide by Evadata
  s3BucketName:
    Type: String
    Description: s3BucketName
    Default: evadata-match-bucket-name # Update this with the bucket name depending on the environment

Resources:
  # Comment: I will reference s3BucketName later in the code. Please deploy this code in the template where your match bucket is created and anywhere I commented about the bucket name, you will want to reference this bucketName
  # This bucket should not be created. This bucket is not secure. Just showing it so I can reference the name of it
  s3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref s3BucketName #TO-DO: Update the bucketName to reference the parameter. This will allow for correct permissions downstream.

  DecryptionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Description: This role is for the Decryption lambda function
      MaxSessionDuration: 3600
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      - arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy
      Policies:
      - PolicyName: file-access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - kms:decrypt
            Resource: !Ref EvadataKmsKey
          - Effect: Allow
            Action:
            - s3:getObject
            - s3:putObject
            Resource: 
              - !Sub arn:aws:s3:::${s3BucketName} # s3BucketName is defined as a parameter. Update the parameter to obtain the correct permissions
              - !Sub arn:aws:s3:::${s3BucketName}/* # s3BucketName is defined as a parameter. Update the parameter to obtain the correct permissions

  DecryptionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.decryption
      Runtime: python3.9
      MemorySize: 512
      Timeout: 900
      Role: !GetAtt DecryptionRole.Arn
      Environment:
        Variables:
          KMS_KEY: !Ref EvadataKmsKey
      Events:
        TriggerDecryption:
          Type: S3
          Properties:
            Bucket: !Ref s3Bucket #TODO: REPLACE Reference the match bucket directly here
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: lens # This can be the prefix of the match file prefix. Must be something other than decrypted

  DecryptionFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt DecryptionFunction.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub arn:aws:s3:::${s3BucketName} # s3BucketName is defined as a parameter. Update the parameter to obtain the correct permissions

  DecryptionFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['/', ['/aws/lambda', !Ref DecryptionFunction]]
      RetentionInDays: 731